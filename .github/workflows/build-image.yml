name: Build Image
on:
  workflow_call:
    inputs:
      sem_ver:
        description: "Semantic version of this repository"
        required: true
        type: string
      godot_version:
        description: Godot Version Semver
        default: "4.4"
        required: true
        type: string
      release_name:
        description: Release tag, ie stable, rc1, dev, ect
        default: stable
        required: true
        type: string
      release_image:
        description: Whether or not to push this image to dockerhub
        default: false
        type: boolean
    outputs:
      github_image_name_and_tag:
        description: Name and tag of the image that was built
        value: ${{ jobs.build_image.outputs.github_image_name_and_tag }}

env:
  IMAGE_NAME: godot4-omnibuilder3d
jobs:
  build_image:
    name: Build Image
    runs-on: ubuntu-latest
    steps:
      - name: Write repo owner
        id: write_image_owner
        run: echo IMAGE_OWNER=$(echo ${{ github.repository_owner }} | tr '[:upper:]' '[:lower:]') >> $GITHUB_ENV

      - name: Write Image tag from Godot Version
        run: echo IMAGE_TAG=$(echo ${{ inputs.release_name != 'stable' && format('.{0}', inputs.release_name) || '' }}) >> $GITHUB_ENV

      - name: Output image name for test project build
        id: write_image_tag
        run: |
          echo "VERSIONED_IMAGE_TAG=${{ inputs.sem_ver }}-${{ inputs.godot_version }}${{ env.IMAGE_TAG }}" >> $GITHUB_ENV
          echo "LATEST_IMAGE_TAG=latest-${{ inputs.godot_version }}${{ env.IMAGE_TAG }}" >> $GITHUB_ENV
          echo "MONO_VERSIONED_IMAGE_TAG=${{ inputs.sem_ver }}-${{ inputs.godot_version }}${{ env.IMAGE_TAG }}-mono" >> $GITHUB_ENV
          echo "MONO_LATEST_IMAGE_TAG=latest-${{ inputs.godot_version }}${{ env.IMAGE_TAG }}-mono" >> $GITHUB_ENV
          echo "VANILLA_VERSIONED_IMAGE_TAG=${{ inputs.sem_ver }}-${{ inputs.godot_version }}${{ env.IMAGE_TAG }}-vanilla" >> $GITHUB_ENV
          echo "VANILLA_LATEST_IMAGE_TAG=latest-${{ inputs.godot_version }}${{ env.IMAGE_TAG }}-vanilla" >> $GITHUB_ENV

      - uses: actions/checkout@v3
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1.14.1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Login to DockerHub
        if: ${{ inputs.release_image }}
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Mono Docker images to Github
        uses: docker/build-push-action@v2.9.0
        with:
          context: .
          file: Dockerfile
          push: true
          tags: |
            ghcr.io/${{ env.IMAGE_OWNER }}/${{ env.IMAGE_NAME }}:${{ env.VERSIONED_IMAGE_TAG }}
            ghcr.io/${{ env.IMAGE_OWNER }}/${{ env.IMAGE_NAME }}:${{ env.MONO_VERSIONED_IMAGE_TAG }}
          build-args: |
            GODOT_VERSION=mono-${{ inputs.godot_version }}
            RELEASE_NAME=${{ inputs.release_name }}

      - name: Build and Release Mono Docker images to Dockerhub
        if: ${{ inputs.release_image }}
        uses: docker/build-push-action@v2.9.0
        with:
          context: .
          file: Dockerfile
          push: true
          tags: |
            ${{ env.IMAGE_OWNER }}/${{ env.IMAGE_NAME }}:${{ env.VERSIONED_IMAGE_TAG }}
            ${{ env.IMAGE_OWNER }}/${{ env.IMAGE_NAME }}:${{ env.MONO_VERSIONED_IMAGE_TAG }}
            ${{ env.IMAGE_OWNER }}/${{ env.IMAGE_NAME }}:${{ env.LATEST_IMAGE_TAG }}
            ${{ env.IMAGE_OWNER }}/${{ env.IMAGE_NAME }}:${{ env.MONO_LATEST_IMAGE_TAG }}
            
          build-args: |
            GODOT_VERSION=mono-${{ inputs.godot_version }}
            RELEASE_NAME=${{ inputs.release_name }}

      - name: Collect outputs
        id: collect_outputs
        run: |
          echo github_image_name_and_tag=ghcr.io/${{ env.IMAGE_OWNER }}/${{ env.IMAGE_NAME }}:${{ env.MONO_VERSIONED_IMAGE_TAG }} >> $GITHUB_OUTPUT
          echo image_name_and_tag=${{ env.IMAGE_OWNER }}/${{ env.IMAGE_NAME }}:${{ env.MONO_VERSIONED_IMAGE_TAG }} >> $GITHUB_OUTPUT
    outputs:
      github_image_name_and_tag: ${{ steps.collect_outputs.outputs.github_image_name_and_tag }}
      image_name_and_tag: ${{ steps.collect_outputs.outputs.image_name_and_tag }}
